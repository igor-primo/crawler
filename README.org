#+TITLE: Crawler
#+STARTUP: show2levels

* Introdução
Esse texto é a documentação de um crawler para resgatar a versão de
alguns ativos de TI.

* Linguagem do programa
Aqui temos uma lista das possíveis linguagens e seus prós e
contras. Foram escolhidas para avaliação porque são conhecidas pela
equipe de TI.

| Linguagem  | Prós                          | Contras                                                   |
|------------+-------------------------------+-----------------------------------------------------------|
| Java       | Checagem estática de tipos    | Sintaxe prolixa                                           |
|            | Empacotamento de dependências |                                                           |
| Python     | Sintaxe concisa               | Checagem dinâmica de tipos                                |
| PHP        | Sintaxe concisa               | Checagem dinâmica de tipos                                |
|            |                               | Difícil configuração de ambiente                          |
| Bash       | Sintaxe concisa               | Checagem dinâmica de tipos                                |
|            |                               | Soluções baseadas em manipulação de texto                 |
|            |                               | Soluções fáceis para sistemas *nix, difíceis para Windows |
| Powershell | Sintaxe concisa               | Checagem dinâmica de tipos                                |
|            |                               | Soluções difíceis para sistemas *nix                      |

A linguagem escolhida é Java porque sintaxe prolixa não prevalece
sobre checagem estática de tipos e empacotamento de dependências.

* Sistem de build Maven
O sistema de build escolhido é o Maven porque é utilizado como
back-end de algumas IDEs Java e pode ser utilizado na linha de comando.

* Solução e Dependências
A solução consiste em resgatar uma lista de páginas HTML que listam os
arquivos que consistem nos ativos de TI cuja versão queremos
determinar. Normalmente essas páginas são geradas por uma função de
listagem de diretório, o que facilita o parsing.

Como dependências serão utilizados o Jsoup Java HTML Parser, presente no repositório central do
Maven e o OpenJDK. O Jsoup foi escolhido por ser simples e bem
mantido. O OpenJDK foi escolhido por ser uma implementação de fonte
aberta com licença GPL-2.0 da plataforma Java SE.

Também serão utilizados o Maven Assembly para empacotar as dependências
junto com o JAR da aplicação e o OpenCSV para fazer o parsing do csv.

As versões utilizadas para desenvolvimento são a seguinte:
#+begin_src sh :results output :exports both
  java --version
#+end_src

#+RESULTS:
: openjdk 17.0.7 2023-04-18
: OpenJDK Runtime Environment (Red_Hat-17.0.7.0.7-4.fc38) (build 17.0.7+7)
: OpenJDK 64-Bit Server VM (Red_Hat-17.0.7.0.7-4.fc38) (build 17.0.7+7, mixed mode, sharing)

#+begin_src sh :results output :exports both
  mvn --version
#+end_src

#+RESULTS:
: Apache Maven 3.8.6 (Red Hat 3.8.6-4)
: Maven home: /usr/share/maven
: Java version: 17.0.7, vendor: Red Hat, Inc., runtime: /usr/lib/jvm/java-17-openjdk-17.0.7.0.7-5.fc38.x86_64
: Default locale: pt_BR, platform encoding: UTF-8
: OS name: "linux", version: "6.3.8-200.fc38.x86_64", arch: "amd64", family: "unix"

- Jsoup :: 1.16.1

- Maven Assembly :: latest

- OpenCSV :: 5.7.1

* Projeto
** Criação do projeto
O seguinte comando foi utilizado para criar o projeto:
#+begin_src sh :tangle ./create-project.sh :shebang "#!/bin/bash"
  mvn archetype:generate -DgroupId=trtLab -DartifactId=crawler-src -DarchetypeArtifactId=maven-archetype-quickstart -DarchetypeVersion=1.4 -DinteractiveMode=false
#+end_src

** Configuração da dependência Jsoup
O seguinte snippet de configuração foi adicionado ao arquivo
./crawler-src/pom.xml
#+begin_src txt
  <!-- https://mvnrepository.com/artifact/org.jsoup/jsoup -->
  <dependency>
	  <groupId>org.jsoup</groupId>
	  <artifactId>jsoup</artifactId>
	  <version>1.16.1</version>
  </dependency>
#+end_src

** Configuração do OpenCSV
O seguinte snippet de configuração foi adicionado ao arquivo
./crawler-src/pom.xml
#+begin_src txt
    <!-- https://mvnrepository.com/artifact/com.opencsv/opencsv -->
  <dependency>
	  <groupId>com.opencsv</groupId>
	  <artifactId>opencsv</artifactId>
	  <version>5.7.1</version>
  </dependency>
#+end_src

** Configuração do plugin Assembly
Esse plugin serve para incluir as dependências no JAR da aplicação,
facilitando a portabilidade.
O seguinte snippet de configuração foi adicionado ao arquivo
./crawler-src/pom.xml
#+begin_src  txt
	 <plugin>
			  <artifactId>maven-assembly-plugin</artifactId>
			  <executions>
				  <execution>
					   <phase>package</phase>
					   <goals>
						   <goal>single</goal>
					   </goals>
				   </execution>
			   </executions>
			   <configuration>
					<!-- ... -->
					<archive>
						<manifest>
							  <mainClass>fully.qualified.MainClass</mainClass>
						</manifest>
					</archive>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
				   </descriptorRefs>
			  </configuration>
	  </plugin>
#+end_src

Para baixar dependências:
#+begin_src sh :tangle ./download-dependencies.sh :shebang "#!/bin/bash"
  cd crawler-src
  mvn dependency:resolve
#+end_src

* Compilação
#+begin_src sh
  cd crawler-src
  mvn clean compile assembly:single
#+end_src

* Execução
#+begin_src txt
  java -cp crawler-src/target/crawler-1.0-jar-with-dependencies.jar trtLab.App input.csv
#+end_src

* Entrada
A entrada é um arquivo csv contendo o nome do ativo e as URLs
que apontam para os artefatos do ativo. O nome do ativo deve ser
separado das URLs por ponto e vírgula (";"). Por exemplo:
#+begin_src txt
Rocky Linux;https://download.rockylinux.org/pub/rocky/
Ubuntu Server;https://releases.ubuntu.com/
Oracle Linux;https://yum.oracle.com/oracle-linux-isos.html
Windows Server;https://learn.microsoft.com/en-us/windows-server/get-started/windows-server-release-info
Laravel;https://github.com/laravel/laravel/releases
PHP;https://www.php.net/downloads.php
#+end_src

Atenção: o reconhecimento do nome do ativo depende de strings
codificadas no código fonte. Por exemplo: 
#+begin_src java
	case "Ubuntu Server":

		for(Element element : doc.select("a[href]")) {

			String URL;
			String[] URLSplitted;

			URL = element.absUrl("href");
			if(!URL.startsWith("https://releases.ubuntu.com/"))
				continue;
			// Exemplo: https://releases.ubuntu.com/23.04/
			URLSplitted = URL.split("/");
			if(URLSplitted.length < 4)
				continue;
			if(this.versions.contains(this.assetName + " - " + URLSplitted[3]))
				continue;
			if(!URLSplitted[3].matches("^\\d+(\\.\\d+)*$"))
				continue;
			this.versions.add(this.assetName + " - " + URLSplitted[3]);
		}
		break;
#+end_src

Cada inclusão de ativo implica necessidade de mudança do
código fonte, já que o ativo precisa ser reconhecido com comparação
estrita de nome e o tratamento da URL precisa ser codificado segundo
os padrões exibidos na página apontada pela URL.

* Saída
Exemplo de saída:
#+begin_src txt
# Rocky Linux - [https://download.rockylinux.org/pub/rocky/]
Rocky Linux - 8
Rocky Linux - 8.4
Rocky Linux - 8.5
Rocky Linux - 8.6
Rocky Linux - 8.7
Rocky Linux - 8.8
Rocky Linux - 9
Rocky Linux - 9.0
Rocky Linux - 9.1
- Rocky Linux - 9.2
# Ubuntu Server - [https://releases.ubuntu.com/]
Ubuntu Server - 14.04
Ubuntu Server - 14.04.6
Ubuntu Server - 16.04
Ubuntu Server - 16.04.7
Ubuntu Server - 18.04
Ubuntu Server - 18.04.6
Ubuntu Server - 20.04
Ubuntu Server - 20.04.6
Ubuntu Server - 22.04
Ubuntu Server - 22.04.2
Ubuntu Server - 22.10
- Ubuntu Server - 23.04
# Oracle Linux - [https://yum.oracle.com/oracle-linux-isos.html]
Oracle Linux - 6.1
Oracle Linux - 6.8
Oracle Linux - 6.9
Oracle Linux - 7.7
Oracle Linux - 7.8
Oracle Linux - 7.9
Oracle Linux - 8.6
Oracle Linux - 8.7
Oracle Linux - 8.8
Oracle Linux - 9.0
Oracle Linux - 9.1
- Oracle Linux - 9.2
# Windows Server - [https://learn.microsoft.com/en-us/windows-server/get-started/windows-server-release-info]
Windows Server - Windows Server 2016 (version 1607)
Windows Server - Windows Server 2019 (version 1809)
- Windows Server - Windows Server 2022
# Laravel - [https://github.com/laravel/laravel/releases]
Laravel - v10.0.5
Laravel - v10.0.6
Laravel - v10.0.7
Laravel - v10.1.0
Laravel - v10.1.1
Laravel - v10.2.0
Laravel - v10.2.1
Laravel - v10.2.2
Laravel - v10.2.3
- Laravel - v10.2.4
# PHP - [https://www.php.net/downloads.php]
PHP - 8.0.29
PHP - 8.0.29
PHP - 8.0.29
PHP - 8.0.29
PHP - 8.0.29
PHP - 8.0.29
PHP - 8.1.20
PHP - 8.1.20
PHP - 8.1.20
PHP - 8.1.20
PHP - 8.1.20
PHP - 8.1.20
PHP - 8.2.7
PHP - 8.2.7
PHP - 8.2.7
PHP - 8.2.7
PHP - 8.2.7
- PHP - 8.2.7
#+end_src
